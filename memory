import tkinter as tk
from tkinter import ttk
from Signal import *

class Generator:


    def __init__(self,window,height,width,state):
        self.state=state
        self.datain=[0]
        self.dataout=[[0,0,0,0],[0,0,0,0]]


        self.frame=tk.Frame(self.window,bg="pink",bd=5)
        tk.Grid.rowconfigure(self.window,0,weight=1)
        tk.Grid.columnconfigure(self.window,0,weight=1)
        self.frame.grid(row=0,column=0,sticky="nswe")



        self.createSourceSignal(2)
        self.Period=[100,1000]#
        self.signalType=[0,0]#
        self.numberOfSources=2
        self.createListoOfOutputs()
        self.numberOfSignals=2
        self.signal=0


    def createSourceSignal(self,quantity):
        
        self.signalSource=[(Signal())for i in range(quantity)]
    
    def UpdateData(self):
        if self.state:
            self.sendSignal()

    def sendSignal(self):
        for i in range(self.numberOfSources):
            data=self.signalSource[i].generateSignal(self.Period[i],self.signalType[i])
            self.dataout[i]=[data[0],data[1],0,i]


    def resetData(self):
        self.datain=0
        self.dataout=[[0,0],[0,0]]
        self.state=False
    
    def createListoOfOutputs(self):
        self.current_varout = tk.StringVar()
        self.comboboxout = ttk.Combobox(self.frame, textvariable=self.current_varout)
        self.comboboxout['values']=["Out"+str(i)+":" for i in range(self.numberOfSources)]
        self.comboboxout['state']='readonly'
        self.comboboxout.pack()
        def outputSelected(self):
            for i in range(self.numberOfSources):
                if self.current_varout.get()=="Out"+str(i)+":":


        self.comboboxout.bind('<<ComboboxSelected>>', outputSelected)
        print(self.signal)

    

        
    def createListoOfSignals(self):
        
        self.current_varsin = tk.StringVar()
        self.comboboxsin = ttk.Combobox(self.frame, textvariable=self.current_varsin)
        self.comboboxsin['values']=["sin"+str(i)+":" for i in range(self.numberOfSignals)]
        self.comboboxsin['state']='readonly'
        self.comboboxsin.pack()
        self.comboboxsin.bind('<<ComboboxSelected>>', self.signalSelected)

    def signalSelected(self):
            for i in range(self.numberOfSignals):
                if self.current_varsin.get()=="sin"+str(i)+":":
                    print("gga"+str(i))